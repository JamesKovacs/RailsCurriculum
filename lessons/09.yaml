--- 
section_title: Topics
goal_title: Creating a migration
goal: |
  
  TODO: diagram of topics model
  
  The suggestotron has a list of topics that people can vote on. We'll
  store our topics in the database. In this step you'll do the
  following:
  
  * Create a database table for topics with a title and a description
  
  In this step we'll learn a bit about MVC (Model-View-Controller) architecture.
  By the end of this step you should understand the following concepts:
  
  * A record
  * Model
  * View
  * Controller

steps: |
  
  Try the following in your terminal:
  
      rails generate scaffold topic title:string description:text
      rake db:migrate
      rails server
  
  TODO: have them look at the generated files

explanation: |
  
  `rails generate scaffold topic title:string description:text`
  
  * `generate scaffold` tells rails to create everything necessary to get up and running with topics
  * `topic` tells rails the name of the new model
  * `title:string` says that topics have a title, which is a string.
  * `description:text` says that topics have a description which is a "text". (We're befuddled by the difference too).
  * `rake db:migrate` tells rails to update the database to include a table for our new model
  
  TODO: no... we need to show all the files created and say what they mean
  
  ##### Explaining MVC and Records
  
  [[File:Mvc.jpg]]
  
  TODO: fix fuzzy ugly diagram
  
  Rails implements a very specific notion of the
  **Model-View-Controller** pattern, which guides how you build a web
  application.
  
  **Model**
  
  * represents what is in the database
  * ActiveRecord, ActiveModel
  * TODO: clarify
  
  **View**
  
  * the model rendered as HTML
  * ActionView, erb
  * TODO: clarify
  
  **Controller**
  
  * receives HTTP actions (GET, POST, PUT, DELETE)
  * decides what to do, such as rendering a view
  * ActionController
  * TODO: clarify
